@model Devir.DMS.Web.Models.OrganiztionStructure.DepartmentViewModel


@{
    Layout = null;
}
<script>
    $(document).ready(function () {
        InitPeoplePicker();
        InitDepartmentPicker();


        var selrow = $("#orgU").getGridParam("selrow");
        if (selrow != null && $("#dpDepartmentId").val() == null) {
            var name = $("#orgU").getRowData(selrow)["Name"];
            $("#dpDepartmentId").val(selrow);
            $("#dpDepartmentName").val(name);
        }
    });
</script>   


    @using (Ajax.BeginForm((bool)ViewBag.isForUpdate == false ? "AddDepartment" : "EditDepartment", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "addModal" }))
    {
        <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                @if ((bool)ViewBag.isForUpdate)
                {
                    <h3 id="addModalLabel">Редактировать подразделение</h3>
                }
                else
                {
                    <h3 id="addModalLabel"> Создать подразделение </h3>
                }
            </div>
        @Html.ValidationSummary(true)
        <div style="margin: 10px" class="modal-body" id="addModalBody">
            
            <fieldset>
                <legend>Организационная структура</legend>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Name)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.OU)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.OU)
                    @Html.ValidationMessageFor(model => model.OU)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Code)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Code)
                    @Html.ValidationMessageFor(model => model.Code)
                </div>
                <div class="editor-label">
                    Главное подразделение
                </div>

                <div class="editor-field">
                    <div class="departmentpicker">
                        <input type="hidden" id="dpDepartmentId" value="@Model.ParentDepartmentId" name="ParentDepartmentId" />
                        <input type="text" id="dpDepartmentName" value="@Model.ParentDepartmentName" name="ParentDepartmentName" />
                    </div>
                </div>

                <div class="editor-lable">
                    Руководитель подразделения
                </div>
                <div class="editor-field">
                    <div class="peoplepicker">
                        <input type="hidden" id="ppChiefId" value='@Model.ChiefId' name="ChiefId" />
                        <input type="text" id="ppChiefName" value='@Model.ChiefName' name="ChiefName" />
                        @Html.ValidationMessageFor(model => model.ChiefId)
                        @Html.ValidationMessageFor(model => model.ChiefName)
                    </div>
                </div>


                
                                  

                @Html.HiddenFor(model => model.Id)

                <br />

                <p>
                    <input type="submit" value="Сохранить" />
                    <input value="Отмена" type="button" class="close" data-dismiss="modal" aria-hidden="true" />
                </p>
            </fieldset>
        </div>
    }

